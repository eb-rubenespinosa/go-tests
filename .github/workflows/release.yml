on: 
  release:
    types:
      - created

name: Build and Release
jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.11.x]
        platform: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      if: success()
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Setup env
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::set-env name=GOBIN::$(go env GOPATH)/bin"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create go path
      run: |
        mkdir -p $GOPATH/pkg
        mkdir -p $GOBIN
        mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
        mv ./* $GOPATH/src/github.com/$GITHUB_REPOSITORY
        rm -rf .git*
    - name: Make build
      run: |
        cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure  
        fi
        go build
    - name: Upload Artifacts
      run: |
        cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
        tar czf tmp.tar.gz go-tests
        if [ "${{ matrix.platform }}" == "macos-latest" ]; then
          export PLATFORM="darwin-amd64"  
        elif [ "${{ matrix.platform }}" == "ubuntu-latest"  ]; then
          export PLATFORM="linux-amd64"  
        fi
        asset_url=$(curl \
          -X POST \
          --data-binary @tmp.tar.gz \
          -H 'Content-Type: multipart/form-data' \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=yak-$PLATFORM-${{ github.event.release.tag_name }}.tar.gz" | jq -r '.url')
          echo "::set-env name=ASSET_URL::$asset_url"
    - name: Checkout master code
      uses: actions/checkout@v2
      with:
        branch: 'master'
        fetch-depth: '0'
        tags: false
    - name: Modify brew and changelog
      if: matrix.platform == 'macos-latest'
      run: |
        chmod +x release.sh
        ./release.sh
        
        git add yak.rb CHANGELOG.md
        git commit -m "Release $VERSION for MacOS"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ github.event.release.tag_name }}
        CHANGELOG: ${{ github.event.release.body }}
    - name: Modify linux 
      if: matrix.platform == 'ubuntu-latest'
      run: |

        # update README file
        sed -i -e 's/download\/[%d.]+\/yak-linux-amd64-.*\.tar\.gz /download\/'"$VERSION"'\/yak-linux-amd64-'"$VERSION"'.tar.gz /g' README.md
        
        git add README.md
        git commit -m "Release $VERSION Linux"
    - name: Push master changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
